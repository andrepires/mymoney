(function () {
    "use strict";
    var serviceId = "model.metadata";

    function metadata(config) {
        var keyGenerator = breeze.AutoGeneratedKeyType.Identity;
        var namespace = config.namespace;
        var helper = new breeze.config.MetadataHelper(namespace, keyGenerator);
        var store;
        var addType = function (type) {
            helper.addTypeToStore(store, type);
        };

        //Data types. Move to config?
        const DT = breeze.DataType;
        const Oid = DT.Guid;
        const Id = DT.Int32;
        const Bool = DT.Boolean;
        const Date = DT.Date;
        const Int16 = DT.Int16;
        const Int64 = DT.Int64;
        const Money = DT.Decimal;
        const Text = DT.String;
        const Undefined = DT.Undefined;

        var entityNames = config.entityNames;

        //This is where we add entities metadata
        function addAccount() {
            addType({
                shortName: entityNames.account,
                namespace: namespace,
                dataProperties: {
                    Oid: { type: Oid, isPartOfKey: true },
                    CreatedOn: { type: Date },
                    LastModifiedOn: { type: Date },
                    Name: { type: Text },
                    Description: { type: Text },
                    AccountType: { type: Int16 },
                    Value: { type: Money },
                    DueDate: { type: Date },
                    PaymentDate: { type: Date }
                }
            });
        }

        function initializeMetadataStore(metadataStore) {
            store = metadataStore;
            addAccount();
        }

        return {
            initializeMetadataStore: initializeMetadataStore
        }
    }

    angular.module("app").service(serviceId, ["config", metadata]);
})();